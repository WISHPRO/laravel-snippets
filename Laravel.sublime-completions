{
	"scope": "source.php",

	"completions": [

		// Routes
		{ "trigger": "Laravel: Route::group", "contents": "Route::group(['${1:prefix|before|after}' => '${2:value}'], function()\n\\{\n\t$0\n\\});" },
		{ "trigger": "Laravel: Route::resource", "contents": "Route::resource('${1:path}', '${2:Name}Controller'${3:, ['${4:except|only}' => ['${5:index}']]});" },
		{ "trigger": "Laravel: Route::any", "contents": "Route::any('${1:path}', [${2/(?:.+)/'as' => '/g}${2:name}${2/(?:.+)/', /g}'uses' => '${3:Name}Controller@${4:method}'$5]);" },
		{ "trigger": "Laravel: Route::any (closure)", "contents": "Route::any('${1:path}', ${2/(?:.+)/[/g}${2:attributes}${2/(?:.+)/, /g}function($3)\n\\{\n\t$0\n\\}${2/(?:.+)/]/g});" },
		{ "trigger": "Laravel: Route::get", "contents": "Route::get('${1:path}', [${2/(?:.+)/'as' => '/g}${2:name}${2/(?:.+)/', /g}'uses' => '${3:Name}Controller@${4:method}'$5]);" },
		{ "trigger": "Laravel: Route::get (closure)", "contents": "Route::get('${1:path}', ${2/(?:.+)/[/g}${2:attributes}${2/(?:.+)/, /g}function($3)\n\\{\n\t$0\n\\}${2/(?:.+)/]/g});" },
		{ "trigger": "Laravel: Route::post", "contents": "Route::post('${1:path}', [${2/(?:.+)/'as' => '/g}${2:name}${2/(?:.+)/', /g}'uses' => '${3:Name}Controller@${4:method}'$5]);" },
		{ "trigger": "Laravel: Route::post (closure)", "contents": "Route::post('${1:path}', ${2/(?:.+)/[/g}${2:attributes}${2/(?:.+)/, /g}function($3)\n\\{\n\t$0\n\\}${2/(?:.+)/]/g});" },
		{ "trigger": "Laravel: Route::put", "contents": "Route::put('${1:path}', [${2/(?:.+)/'as' => '/g}${2:name}${2/(?:.+)/', /g}'uses' => '${3:Name}Controller@${4:method}'$5]);" },
		{ "trigger": "Laravel: Route::put (closure)", "contents": "Route::put('${1:path}', ${2/(?:.+)/[/g}${2:attributes}${2/(?:.+)/, /g}function($3)\n\\{\n\t$0\n\\}${2/(?:.+)/]/g});" },
		{ "trigger": "Laravel: Route::patch", "contents": "Route::patch('${1:path}', [${2/(?:.+)/'as' => '/g}${2:name}${2/(?:.+)/', /g}'uses' => '${3:Name}Controller@${4:method}'$5]);" },
		{ "trigger": "Laravel: Route::patch (closure)", "contents": "Route::patch('${1:path}', ${2/(?:.+)/[/g}${2:attributes}${2/(?:.+)/, /g}function($3)\n\\{\n\t$0\n\\}${2/(?:.+)/]/g});" },
		{ "trigger": "Laravel: Route::delete", "contents": "Route::delete('${1:path}', [${2/(?:.+)/'as' => '/g}${2:name}${2/(?:.+)/', /g}'uses' => '${3:Name}Controller@${4:method}'$5]);" },
		{ "trigger": "Laravel: Route::delete (closure)", "contents": "Route::delete('${1:path}', ${2/(?:.+)/[/g}${2:attributes}${2/(?:.+)/, /g}function($3)\n\\{\n\t$0\n\\}${2/(?:.+)/]/g});" },

		// Route Filters
		{ "trigger": "Laravel: after", "contents": "after('${1:path}')" },
		{ "trigger": "Laravel: before", "contents": "before('${1:path}')" },

		// View
		{ "trigger": "Laravel: View::make", "contents": "View::make('${1:view}'${2/(?:.+)/, [/g}${2:data}${2/(?:.+)/]/g})" },
		{ "trigger": "Laravel: with (View)", "contents": "with('${1:key}', ${2:value})" },

		// Form
		{ "trigger": "Laravel: Form::open", "contents": "Form::open(${1/(?:.+)/[/g}${1:options}${1/(?:.+)/]/g})" },
		{ "trigger": "Laravel: Form::model", "contents": "Form::model(${1:\\$model}${2/(?:.+)/, [/g}${2:options}${2/(?:.+)/]/g})" },
		{ "trigger": "Laravel: Form::label", "contents": "Form::label('${1:field}'${2/(?:.+)/, '/g}${2:label}${2/(?:.+)/'/g}${3/(?:.+)/, [/g}${3:attributes}${3/(?:.+)/]/g})" },
		{ "trigger": "Laravel: Form::text", "contents": "Form::text('${1:name}'${2/(?:.+)/, '/g}${2:value}${2/(?:.+)/'/g}${3/(?:.+)/, [/g}${3:attributes}${3/(?:.+)/]/g})" },
		{ "trigger": "Laravel: Form::password", "contents": "Form::password('${1:name}'${2/(?:.+)/, '/g}${2:value}${2/(?:.+)/'/g}${3/(?:.+)/, [/g}${3:attributes}${3/(?:.+)/]/g})" },
		{ "trigger": "Laravel: Form::checkbox", "contents": "Form::checkbox('${1:name}'${2/(?:.+)/, '/g}${2:value}${2/(?:.+)/'/g}${3/(?:.+)/, /g}${3:true}${4/(?:.+)/, [/g}${4:attributes}${4/(?:.+)/]/g})" },
		{ "trigger": "Laravel: Form::radio", "contents": "Form::radio('${1:name}'${2/(?:.+)/, '/g}${2:value}${2/(?:.+)/'/g}${3/(?:.+)/, /g}${3:true}${4/(?:.+)/, [/g}${4:attributes}${4/(?:.+)/]/g})" },
		{ "trigger": "Laravel: Form::file", "contents": "Form::file('${1:name}'${2/(?:.+)/, [/g}${2:attributes}${2/(?:.+)/]/g})" },
		{ "trigger": "Laravel: Form::select", "contents": "Form::select('${1:name}'${2/(?:.+)/, [/g}${2:options}${2/(?:.+)/]/g}${3/(?:.+)/, '/g}${3:selected}${3/(?:.+)/'/g}${4/(?:.+)/, [/g}${4:attributes}${4/(?:.+)/]/g})" },
		{ "trigger": "Laravel: Form::selectRange", "contents": "Form::selectRange('${1:name}'${2/(?:.+)/, /g}${2:min}${3/(?:.+)/, /g}${3:max}${4/(?:.+)/, '/g}${4:selected}${4/(?:.+)/'/g}${5/(?:.+)/, [/g}${5:attributes}${5/(?:.+)/]/g})" },
		{ "trigger": "Laravel: Form::selectMonth", "contents": "Form::selectMonth('${1:name}'${2/(?:.+)/, /g}${2:1-12}${3/(?:.+)/, [/g}${3:attributes}${3/(?:.+)/]/g})" },
		{ "trigger": "Laravel: Form::button", "contents": "Form::button('${1:label}'${2/(?:.+)/, [/g}${2:attributes}${2/(?:.+)/]/g})" },
		{ "trigger": "Laravel: Form::submit", "contents": "Form::submit('${1:label}'${2/(?:.+)/, [/g}${2:attributes}${2/(?:.+)/]/g})" },

		// DB
		{ "trigger": "Laravel: DB::getQueryLog", "contents": "DB::getQueryLog()" },

		// Eloquent
		{ "trigger": "Laravel: all", "contents": "all()" },
		{ "trigger": "Laravel: associate", "contents": "associate(${1:model})" },
		{ "trigger": "Laravel: attach", "contents": "attach(${1:id})" },
		{ "trigger": "Laravel: belongsTo", "contents": "belongsTo('${1:Model}')" },
		{ "trigger": "Laravel: belongsToMany", "contents": "belongsToMany('${1:Model}')" },
		{ "trigger": "Laravel: chunk", "contents": "chunk(${1:amount}, function(${2:chunk})\n{\n\t$0\n});" },
		{ "trigger": "Laravel: count", "contents": "count()" },
		{ "trigger": "Laravel: create", "contents": "create(${1:attributes})" },
		{ "trigger": "Laravel: delete", "contents": "delete()" },
		{ "trigger": "Laravel: destroy", "contents": "destroy()" },
		{ "trigger": "Laravel: detach", "contents": "detach(${1:id})" },
		{ "trigger": "Laravel: find", "contents": "find(${1:id})" },
		{ "trigger": "Laravel: findOrFail", "contents": "findOrFail(${1:id})" },
		{ "trigger": "Laravel: first", "contents": "first()" },
		{ "trigger": "Laravel: firstOrCreate", "contents": "firstOrCreate(${1:attributes})" },
		{ "trigger": "Laravel: firstOrFail", "contents": "firstOrFail()" },
		{ "trigger": "Laravel: firstOrNew", "contents": "firstOrNew(${1:attributes})" },
		{ "trigger": "Laravel: forceDelete", "contents": "forceDelete()" },
		{ "trigger": "Laravel: get", "contents": "get()" },
		{ "trigger": "Laravel: has", "contents": "has('${1:relationship}')" },
		{ "trigger": "Laravel: hasOne", "contents": "hasOne('${1:Model}')" },
		{ "trigger": "Laravel: hasMany", "contents": "hasMany('${1:Model}')" },
		{ "trigger": "Laravel: hasManyThrough", "contents": "hasManyThrough('${1:Model}', '${2:ThroughModel}')" },
		{ "trigger": "Laravel: load", "contents": "load('${1:relationship}')" },
		{ "trigger": "Laravel: morphTo", "contents": "morphTo()" },
		{ "trigger": "Laravel: morphMany", "contents": "morphMany('${1:Model}', '${2:property}')" },
		{ "trigger": "Laravel: on", "contents": "on('${1:connection_name}')" },
		{ "trigger": "Laravel: onlyTrashed", "contents": "onlyTrashed()" },
		{ "trigger": "Laravel: push", "contents": "push()" },
		{ "trigger": "Laravel: restore", "contents": "restore()" },
		{ "trigger": "Laravel: save", "contents": "save()" },
		{ "trigger": "Laravel: sync", "contents": "sync([${1:ids}])" },
		{ "trigger": "Laravel: take", "contents": "take(${1:amount})" },
		{ "trigger": "Laravel: touch", "contents": "touch()" },
		{ "trigger": "Laravel: trashed", "contents": "trashed()" },
		{ "trigger": "Laravel: update", "contents": "update(${1:attributes})" },
		{ "trigger": "Laravel: with", "contents": "with('${1:relationship}')" },
		{ "trigger": "Laravel: withPivot", "contents": "withPivot(${1:attributes})" },
		{ "trigger": "Laravel: withTimestamps", "contents": "withTimestamps()" },
		{ "trigger": "Laravel: withTrashed", "contents": "withTrashed()" },
		{ "trigger": "Laravel: where", "contents": "where('${1:property}', ${2:value})" },
		{ "trigger": "Laravel: where (operator)", "contents": "where('${1:property}', '${2:operator}', ${3:value})" },
		{ "trigger": "Laravel: whereHas", "contents": "whereHas('${1:property}', function(\\$$1)\n{\n\t\\$$1->$0;\n})" },

		// Collections
		{ "trigger": "Laravel: contains", "contents": "contains(${1:key})" },
		{ "trigger": "Laravel: each", "contents": "each(function(\\$${1:item})\n{\n\t$0\n})" },
		{ "trigger": "Laravel: sortBy", "contents": "sortBy(function(\\$${1:item})\n{\n\t$0\n})" },
		{ "trigger": "Laravel: toJson", "contents": "toJson()" },
		{ "trigger": "Laravel: toJson", "contents": "toJson()" },

		// Model Events
		{ "trigger": "Laravel: creating", "contents": "creating(function(\\$${1:item})\n{\n\t$0\n})" },
		{ "trigger": "Laravel: created", "contents": "created(function(\\$${1:item})\n{\n\t$0\n})" },
		{ "trigger": "Laravel: updating", "contents": "updating(function(\\$${1:item})\n{\n\t$0\n})" },
		{ "trigger": "Laravel: updated", "contents": "updated(function(\\$${1:item})\n{\n\t$0\n})" },
		{ "trigger": "Laravel: saving", "contents": "saving(function(\\$${1:item})\n{\n\t$0\n})" },
		{ "trigger": "Laravel: saved", "contents": "saved(function(\\$${1:item})\n{\n\t$0\n})" },
		{ "trigger": "Laravel: deleting", "contents": "deleting(function(\\$${1:item})\n{\n\t$0\n})" },
		{ "trigger": "Laravel: deleted", "contents": "deleted(function(\\$${1:item})\n{\n\t$0\n})" },
		{ "trigger": "Laravel: restoring", "contents": "restoring(function(\\$${1:item})\n{\n\t$0\n})" },
		{ "trigger": "Laravel: restored", "contents": "restored(function(\\$${1:item})\n{\n\t$0\n})" },
		{ "trigger": "Laravel: observe", "contents": "observe(${1:Observer})" },

		// Schema
		{ "trigger": "Laravel: $table->bigIncrements", "contents": "\\$table->bigIncrements('${1:name}')" },
		{ "trigger": "Laravel: $table->bigInteger", "contents": "\\$table->bigInteger('${1:name}')" },
		{ "trigger": "Laravel: $table->binary", "contents": "\\$table->binary('${1:name}')" },
		{ "trigger": "Laravel: $table->boolean", "contents": "\\$table->boolean('${1:name}')" },
		{ "trigger": "Laravel: $table->date", "contents": "\\$table->date('${1:name}')" },
		{ "trigger": "Laravel: $table->dateTime", "contents": "\\$table->dateTime('${1:name}')" },
		{ "trigger": "Laravel: $table->decimal", "contents": "\\$table->decimal('${1:name}', ${2:presision (int)}, ${3:scale (int)})" },
		{ "trigger": "Laravel: $table->double", "contents": "\\$table->double('${1:name}', ${2:presision (int)}, ${3:scale (int)})" },
		{ "trigger": "Laravel: $table->engine", "contents": "\\$table->engine = '${1:InnoDB}';" },
		{ "trigger": "Laravel: $table->enum", "contents": "\\$table->enum('${1:name}', ['${2:option1}'])" },
		{ "trigger": "Laravel: $table->float", "contents": "\\$table->float('${1:name})" },
		{ "trigger": "Laravel: $table->increments", "contents": "\\$table->increments('${1:name}')" },
		{ "trigger": "Laravel: $table->integer", "contents": "\\$table->integer('${1:name}')" },
		{ "trigger": "Laravel: $table->longText", "contents": "\\$table->longText('${1:name}')" },
		{ "trigger": "Laravel: $table->mediumText", "contents": "\\$table->mediumText('${1:name}')" },
		{ "trigger": "Laravel: $table->morphs", "contents": "\\$table->morphs('${1:name}')" },
		{ "trigger": "Laravel: $table->smallInteger", "contents": "\\$table->smallInteger('${1:name}')" },
		{ "trigger": "Laravel: $table->softDeletes", "contents": "\\$table->softDeletes();" },
		{ "trigger": "Laravel: $table->string", "contents": "\\$table->string('${1:name}')" },
		{ "trigger": "Laravel: $table->text", "contents": "\\$table->text('${1:name}')" },
		{ "trigger": "Laravel: $table->time", "contents": "\\$table->time('${1:name}')" },
		{ "trigger": "Laravel: $table->timestamp", "contents": "\\$table->timestamp('${1:name}')" },
		{ "trigger": "Laravel: $table->timestamps", "contents": "\\$table->timestamps();" },
		{ "trigger": "Laravel: nullable()", "contents": "nullable()" },
		{ "trigger": "Laravel: default()", "contents": "default(${1:value})" },
		{ "trigger": "Laravel: unsigned()", "contents": "unsigned()" },
		{ "trigger": "Laravel: primary()", "contents": "primary()" },
		{ "trigger": "Laravel: unique()", "contents": "unique()" },
		{ "trigger": "Laravel: index()", "contents": "index()" },
		{ "trigger": "Laravel: $table->foreign", "contents": "\\$table->foreign('${1:field}')->references('${2:other_field}')->on('${3:other_table}')" },
		{ "trigger": "Laravel: onDelete", "contents": "onDelete('${1:cascade|set null}')" },
		{ "trigger": "Laravel: $table->dropPrimary", "contents": "\\$table->dropPrimary('${1:index}');" },
		{ "trigger": "Laravel: $table->dropUnique", "contents": "\\$table->dropUnique('${1:index}');" },
		{ "trigger": "Laravel: $table->dropIndex", "contents": "\\$table->dropIndex('${1:index}');" },

		// Auth
		{ "trigger": "Laravel: Auth::attempt()", "contents": "Auth::attempt([${1:credentials}]${2:, true})" },
		{ "trigger": "Laravel: Auth::check()", "contents": "Auth::check()" },
		{ "trigger": "Laravel: Auth::login()", "contents": "Auth::login(${1:\\$user})" },
		{ "trigger": "Laravel: Auth::loginUsingId()", "contents": "Auth::loginUsingId(${1:id})" },
		{ "trigger": "Laravel: Auth::logout()", "contents": "Auth::logout()" },
		{ "trigger": "Laravel: Auth::once()", "contents": "Auth::once([${1:credentials}])" },
		{ "trigger": "Laravel: Auth::user()", "contents": "Auth::user()" },
		{ "trigger": "Laravel: Auth::validate()", "contents": "Auth::validate([${1:credentials}])" },
		{ "trigger": "Laravel: Auth::viaRemember()", "contents": "Auth::viaRemember()" },

		// Helpers
		{ "trigger": "Laravel: dd", "contents": "dd($1);" }

	]
}
